<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lyq.project.dao.RouteStationMapper" >
  <resultMap id="BaseResultMap" type="com.lyq.project.pojo.RouteStation" >
    <constructor >
      <idArg column="id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="begin_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="end_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="route_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="station_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="station_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="num" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, begin_id, end_id, route_id, station_id, station_name, num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from route_station
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByRoutId" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from route_station
    where route_id = #{id}
    order by num
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from route_station
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lyq.project.pojo.RouteStation" >
    insert into route_station (id, begin_id, end_id, 
      route_id, station_id, station_name, 
      num)
    values (#{id,jdbcType=VARCHAR}, #{beginId,jdbcType=VARCHAR}, #{endId,jdbcType=VARCHAR}, 
      #{routeId,jdbcType=VARCHAR}, #{stationId,jdbcType=VARCHAR}, #{stationName,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lyq.project.pojo.RouteStation" >
    insert into route_station
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="beginId != null" >
        begin_id,
      </if>
      <if test="endId != null" >
        end_id,
      </if>
      <if test="routeId != null" >
        route_id,
      </if>
      <if test="stationId != null" >
        station_id,
      </if>
      <if test="stationName != null" >
        station_name,
      </if>
      <if test="num != null" >
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="beginId != null" >
        #{beginId,jdbcType=VARCHAR},
      </if>
      <if test="endId != null" >
        #{endId,jdbcType=VARCHAR},
      </if>
      <if test="routeId != null" >
        #{routeId,jdbcType=VARCHAR},
      </if>
      <if test="stationId != null" >
        #{stationId,jdbcType=VARCHAR},
      </if>
      <if test="stationName != null" >
        #{stationName,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lyq.project.pojo.RouteStation" >
    update route_station
    <set >
      <if test="beginId != null" >
        begin_id = #{beginId,jdbcType=VARCHAR},
      </if>
      <if test="endId != null" >
        end_id = #{endId,jdbcType=VARCHAR},
      </if>
      <if test="routeId != null" >
        route_id = #{routeId,jdbcType=VARCHAR},
      </if>
      <if test="stationId != null" >
        station_id = #{stationId,jdbcType=VARCHAR},
      </if>
      <if test="stationName != null" >
        station_name = #{stationName,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lyq.project.pojo.RouteStation" >
    update route_station
    set begin_id = #{beginId,jdbcType=VARCHAR},
      end_id = #{endId,jdbcType=VARCHAR},
      route_id = #{routeId,jdbcType=VARCHAR},
      station_id = #{stationId,jdbcType=VARCHAR},
      station_name = #{stationName,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>