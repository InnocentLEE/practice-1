<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lyq.project.dao.RouteMapper" >
  <resultMap id="BaseResultMap" type="com.lyq.project.pojo.Route" >
    <constructor >
      <idArg column="id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="unit_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="begin_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="end_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="total_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="createtime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updatetime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, unit_id, name, status, begin_id, end_id, total_time, createtime, updatetime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from route
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByRouteNameStartEnd" resultType="com.lyq.project.dto.RouteListDto">
    select id as Id, `name` as RouteName, begin_id as StartStationId, end_id as EndStationId, total_time as TotalTime, status as Status
    from route
    where unit_id = #{unitId}
    <if test="routeName != null" >
      and `name` like concat('%',#{routeName},'%')
    </if>
    <if test="start != null" >
      and begin_id = #{start}
    </if>
    <if test="end != null" >
      and end_id = #{end}
    </if>
    limit #{index} , #{size}
  </select>
  <select id="selectByRouteNameStartEndCount" resultType="int">
    select count(1)
    from route
    where unit_id = #{unitId}
    <if test="routeName != null" >
      and `name` like concat('%',#{routeName},'%')
    </if>
    <if test="start != null" >
      and begin_id = #{start}
    </if>
    <if test="end != null" >
      and end_id = #{end}
    </if>
  </select>
  <select id="selectChooseByUnit" resultType="com.lyq.project.dto.RouteChooseDto">
    select id as Id, `name` as RouteName , total_time as TotalTime
    from route
    where unit_id = #{id} and status = 1
  </select>
  <select id="countByRouteNameAndUnitId" resultType="int">
    select count(1)
    from route
    where unit_id = #{unitId} and `name` = #{routeName}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from route
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lyq.project.pojo.Route" >
    insert into route (id, unit_id, `name`,
      status, begin_id, end_id, 
      total_time, createtime, updatetime
      )
    values (#{id,jdbcType=VARCHAR}, #{unitId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{beginId,jdbcType=VARCHAR}, #{endId,jdbcType=VARCHAR}, 
      #{totalTime,jdbcType=VARCHAR}, now(), now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lyq.project.pojo.Route" >
    insert into route
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="unitId != null" >
        unit_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="beginId != null" >
        begin_id,
      </if>
      <if test="endId != null" >
        end_id,
      </if>
      <if test="totalTime != null" >
        total_time,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null" >
        #{unitId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="beginId != null" >
        #{beginId,jdbcType=VARCHAR},
      </if>
      <if test="endId != null" >
        #{endId,jdbcType=VARCHAR},
      </if>
      <if test="totalTime != null" >
        #{totalTime,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lyq.project.pojo.Route" >
    update route
    <set >
      <if test="unitId != null" >
        unit_id = #{unitId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="beginId != null" >
        begin_id = #{beginId,jdbcType=VARCHAR},
      </if>
      <if test="endId != null" >
        end_id = #{endId,jdbcType=VARCHAR},
      </if>
      <if test="totalTime != null" >
        total_time = #{totalTime,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
        updatetime = now()
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lyq.project.pojo.Route" >
    update route
    set unit_id = #{unitId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      begin_id = #{beginId,jdbcType=VARCHAR},
      end_id = #{endId,jdbcType=VARCHAR},
      total_time = #{totalTime,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>